#!/usr/bin/env node

/**
 * Production Build Script for CNRS
 *
 * This script:
 * 1. Builds the frontend with Vite
 * 2. Automatically updates the Blade template with correct asset paths
 * 3. Clears Laravel caches
 * 4. Provides production-ready deployment
 */

const fs = require('fs');
const path = require('path');
const { execSync } = require('child_process');

console.log('🚀 Starting CNRS Production Build Process...\n');

// Step 1: Build frontend
console.log('📦 Building frontend with Vite...');
try {
  execSync('cd frontend && npm run build', { stdio: 'inherit' });
  console.log('✅ Frontend build completed successfully\n');
} catch (error) {
  console.error('❌ Frontend build failed:', error.message);
  process.exit(1);
}

// Step 2: Read the generated manifest
console.log('📋 Reading manifest for asset paths...');
const manifestPath = path.join(__dirname, 'public', 'frontend', '.vite', 'manifest.json');

if (!fs.existsSync(manifestPath)) {
  console.error('❌ Manifest file not found at:', manifestPath);
  process.exit(1);
}

const manifest = JSON.parse(fs.readFileSync(manifestPath, 'utf8'));
const indexEntry = manifest['index.html'];

if (!indexEntry) {
  console.error('❌ Index entry not found in manifest');
  process.exit(1);
}

const jsFile = indexEntry.file;
const cssFiles = indexEntry.css || [];

console.log('📄 JavaScript file:', jsFile);
console.log('🎨 CSS files:', cssFiles.join(', '));

// Step 3: Update Blade template
console.log('🔧 Updating Blade template with new asset paths...');
const bladeTemplatePath = path.join(__dirname, 'resources', 'views', 'app.blade.php');

if (!fs.existsSync(bladeTemplatePath)) {
  console.error('❌ Blade template not found at:', bladeTemplatePath);
  process.exit(1);
}

let bladeContent = fs.readFileSync(bladeTemplatePath, 'utf8');

// Generate the asset tags
const baseUrl = '/CNRS/public/frontend/assets/';
const jsTag = `<script type="module" crossorigin src="${baseUrl}${jsFile}"></script>`;
const cssTags = cssFiles.map(css =>
  `<link rel="stylesheet" crossorigin href="${baseUrl}${css}">`
).join('\n');

// Find and replace the asset section
const assetSectionRegex = /<!-- Vite Assets - Force production mode for network deployment -->[\s\S]*?<\/head>/;

if (!assetSectionRegex.test(bladeContent)) {
  console.error('❌ Could not find asset section in Blade template to replace');
  process.exit(1);
}

const newAssetSection = `<!-- Vite Assets - Force production mode for network deployment -->
<!-- Auto-generated by build script - DO NOT EDIT MANUALLY -->
${jsTag}
${cssTags}
</head>`;

bladeContent = bladeContent.replace(assetSectionRegex, newAssetSection);

// Write updated template
fs.writeFileSync(bladeTemplatePath, bladeContent);
console.log('✅ Blade template updated successfully');

// Step 4: Clear Laravel caches
console.log('🧹 Clearing Laravel caches...');
try {
  execSync('php artisan view:clear', { stdio: 'inherit' });
  execSync('php artisan cache:clear', { stdio: 'inherit' });
  execSync('php artisan route:clear', { stdio: 'inherit' });
  console.log('✅ Laravel caches cleared successfully\n');
} catch (error) {
  console.warn('⚠️ Cache clearing failed:', error.message);
  console.log('💡 You may need to run these commands manually:');
  console.log('   php artisan view:clear');
  console.log('   php artisan cache:clear');
  console.log('   php artisan route:clear\n');
}

// Step 5: Final summary
console.log('🎉 Production build completed successfully!');
console.log('\n📋 Build Summary:');
console.log(`📦 Frontend built: frontend/dist/`);
console.log(`📄 JS Asset: ${jsFile}`);
console.log(`🎨 CSS Assets: ${cssFiles.join(', ') || 'None'}`);
console.log(`🔧 Blade template updated: resources/views/app.blade.php`);
console.log('\n🚀 Your CNRS application is ready for production!');
console.log('💡 Visit: http://10.2.10.178/CNRS/public/login');
console.log('\n💡 For future builds, just run:');
console.log('   node build-production.js');
